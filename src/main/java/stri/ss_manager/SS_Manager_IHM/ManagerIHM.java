/*
 * Copyright (C) 2015 Manavai
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package stri.ss_manager.SS_Manager_IHM;

import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import stri.ss_manager.SNMP.smi.OID;
import stri.ss_manager.SNMP.smi.VarBind;
import stri.ss_manager.SNMPKernel.SNMPHandler;

import stri.ss_manager.SNMPMessage.SNMPMessage;
import stri.ss_manager.SNMPMessage.payload.SNMPMessagePayload;

/**
 *
 * @author Lorrain BALBIANI - Farid EL JAMAL - Manavai TEIKITUHAAHAA
 * 
 *  * Cette classe permet de tester le Manager SNMP en initialisant
 * les Threads nécessaire et en créant des messages de tests.
 * 
 * @version 1
 */
public class ManagerIHM extends java.awt.Frame {

    /**
     * Creates new form ManagerIHM
     * @param snmpHandler
     */
    public ManagerIHM(SNMPHandler snmpHandler) {
        initComponents();
        //
        this.setVisible(true);
        //
        this.snmpHandler = snmpHandler;
        //

    }

    public static boolean validate(final String ip) { // fonction pour validation addresse IPV4
        String PATTERN = "^((0|1\\d?\\d?|2[0-4]?\\d?|25[0-5]?|[3-9]\\d?)\\.){3}(0|1\\d?\\d?|2[0-4]?\\d?|25[0-5]?|[3-9]\\d?)$";
        return ip.matches(PATTERN);
    }
    
    public void setOidandValueOnIhmByVarBin(VarBind vb){
        // OID
        this.SetOIDField.setText(vb.getObjectId().getObjectIdStringFormat());
        // Value
        this.ValueField.setText(new String(vb.getObjectValue()));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main_panel = new javax.swing.JPanel();
        label_logo_stri = new javax.swing.JLabel();
        label_logo_UPSSITECH = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        ConfigurationPanel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        ValiderConfiguration = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        AddressIPField = new javax.swing.JTextField();
        choixversionSNMP = new javax.swing.JComboBox();
        CommunauteField = new javax.swing.JTextField();
        resultatValidationIP = new javax.swing.JLabel();
        SNMPPanel = new javax.swing.JPanel();
        label_soft_name = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        GetBouton = new javax.swing.JButton();
        GetNextBouton = new javax.swing.JButton();
        SetBouton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        network_tree = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        SetOIDField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        LogTextArea = new javax.swing.JTextArea();
        ClearFieldBouton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ValueField = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        main_panel.setBackground(new java.awt.Color(153, 153, 153));

        label_logo_stri.setAutoscrolls(true);

        jTabbedPane2.setToolTipText("");

        ValiderConfiguration.setText("Valider");
        ValiderConfiguration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValiderConfigurationActionPerformed(evt);
            }
        });

        jLabel8.setText("Adresse IP");

        jLabel9.setText("Communauté");

        jLabel10.setText("Version SNMP");

        AddressIPField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressIPFieldActionPerformed(evt);
            }
        });

        choixversionSNMP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "version 1", "version 2" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jLabel10)
                                .addGap(49, 49, 49))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(51, 51, 51))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(choixversionSNMP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AddressIPField, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CommunauteField, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(resultatValidationIP))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(ValiderConfiguration, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddressIPField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(resultatValidationIP))
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CommunauteField, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(jLabel9))
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(choixversionSNMP, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(34, 34, 34)
                .addComponent(ValiderConfiguration, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout ConfigurationPanelLayout = new javax.swing.GroupLayout(ConfigurationPanel);
        ConfigurationPanel.setLayout(ConfigurationPanelLayout);
        ConfigurationPanelLayout.setHorizontalGroup(
            ConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfigurationPanelLayout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(308, Short.MAX_VALUE))
        );
        ConfigurationPanelLayout.setVerticalGroup(
            ConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfigurationPanelLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(176, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Configuration", ConfigurationPanel);

        label_soft_name.setFont(new java.awt.Font("Ti92Pluspc", 1, 36)); // NOI18N
        label_soft_name.setText("STRI SNMP Manager v2");

        jButton1.setText("Charger MIB");
        jButton1.setActionCommand("ChargerMIB");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Decharger MIB");
        jButton2.setActionCommand("DechargerMIB");
        jButton2.setEnabled(false);

        GetBouton.setText("Get");
        GetBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetBoutonActionPerformed(evt);
            }
        });

        GetNextBouton.setText("GetNext");
        GetNextBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetNextBoutonActionPerformed(evt);
            }
        });

        SetBouton.setText("Set");
        SetBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetBoutonActionPerformed(evt);
            }
        });

        network_tree.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 0), 1, true));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Networks");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("192.168.1.0/24");
        javax.swing.tree.DefaultMutableTreeNode treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Agent name A");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Agent name B");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("192.168.2.0/24");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("...");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("192.168.3.0/24");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("...");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Manager");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Manager A");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Agent SNMP géré");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Manager B");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Agent SNMP géré");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        network_tree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        network_tree.setDragEnabled(true);
        network_tree.setEditable(true);
        network_tree.setEnabled(false);
        network_tree.setRootVisible(false);
        jScrollPane1.setViewportView(network_tree);

        jLabel1.setText("OID");

        SetOIDField.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        SetOIDField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SetOIDFieldMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SetOIDFieldMouseExited(evt);
            }
        });
        SetOIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetOIDFieldActionPerformed(evt);
            }
        });

        LogTextArea.setBackground(new java.awt.Color(0, 0, 0));
        LogTextArea.setColumns(20);
        LogTextArea.setForeground(new java.awt.Color(0, 204, 0));
        LogTextArea.setRows(5);
        LogTextArea.setText("Affichages ici");
        jScrollPane2.setViewportView(LogTextArea);

        ClearFieldBouton.setBackground(new java.awt.Color(153, 153, 153));
        ClearFieldBouton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ClearFieldBouton.setText("CLEAR");
        ClearFieldBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearFieldBoutonActionPerformed(evt);
            }
        });

        jLabel5.setText("Valeur");

        ValueField.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        ValueField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ValueFieldMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ValueFieldMouseExited(evt);
            }
        });
        ValueField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValueFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SNMPPanelLayout = new javax.swing.GroupLayout(SNMPPanel);
        SNMPPanel.setLayout(SNMPPanelLayout);
        SNMPPanelLayout.setHorizontalGroup(
            SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SNMPPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(SNMPPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(label_soft_name)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(SNMPPanelLayout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(GetBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(GetNextBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ClearFieldBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SetBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(SNMPPanelLayout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(SNMPPanelLayout.createSequentialGroup()
                                    .addGap(27, 27, 27)
                                    .addComponent(jScrollPane2))
                                .addGroup(SNMPPanelLayout.createSequentialGroup()
                                    .addGap(24, 24, 24)
                                    .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SNMPPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(18, 18, 18))
                                        .addGroup(SNMPPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addGap(10, 10, 10)))
                                    .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(ValueField, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                                        .addComponent(SetOIDField))
                                    .addGap(0, 0, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SNMPPanelLayout.setVerticalGroup(
            SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SNMPPanelLayout.createSequentialGroup()
                .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SNMPPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SNMPPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SNMPPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(label_soft_name, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(GetBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(GetNextBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SetBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SNMPPanelLayout.createSequentialGroup()
                        .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SNMPPanelLayout.createSequentialGroup()
                                .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SetOIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(SNMPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ValueField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))
                            .addComponent(ClearFieldBouton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        SetOIDField.getAccessibleContext().setAccessibleName("GetValueField");
        jLabel2.getAccessibleContext().setAccessibleName("wIcon");
        jLabel5.getAccessibleContext().setAccessibleName("ValeurOID");

        jTabbedPane2.addTab("SNMP", SNMPPanel);
        SNMPPanel.getAccessibleContext().setAccessibleName("SNMP");

        jLabel3.setText("Developpé par: Teikituhaaha Manavai, Balbiani Lorrain, El Jammal Farid");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(jLabel3)
                .addContainerGap(309, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(jLabel3)
                .addContainerGap(269, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("A propos", jPanel6);

        javax.swing.GroupLayout main_panelLayout = new javax.swing.GroupLayout(main_panel);
        main_panel.setLayout(main_panelLayout);
        main_panelLayout.setHorizontalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addComponent(label_logo_stri)
                        .addGap(0, 0, 0)
                        .addComponent(label_logo_UPSSITECH)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane2))
                .addContainerGap())
        );
        main_panelLayout.setVerticalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_logo_stri)
                    .addComponent(label_logo_UPSSITECH))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.getAccessibleContext().setAccessibleName("SNMP");
        jTabbedPane2.getAccessibleContext().setAccessibleDescription("SNMP");

        add(main_panel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void ValiderConfigurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValiderConfigurationActionPerformed
    
        InetAddress ipv4 = null;
        String versionSNMP;
        int version;
        byte[] Communautebytes;
        SNMPMessagePayload payload = null; // ?
        String AddressIPAverifier = AddressIPField.getText(); // recuperation de l'addresse IP
        if (validate(AddressIPAverifier) == true) {           // validation

        } else {
            JOptionPane.showMessageDialog (null, "Addresse IP invalide", "Attention", JOptionPane.WARNING_MESSAGE);
            resultatValidationIP.setText("Addresse IP invalide"); // warning si invalide
        }
        String Communaute = CommunauteField.getText();        // recuperation de la communauté

        version = choixversionSNMP.getSelectedIndex() + 1;    // recuperation du numero de la version choisi selon l'index+1 car ca commence par 0. (ici on peux pas utiliser getSelectedValue())
        try {
            ipv4 = InetAddress.getByName(AddressIPAverifier); // conversion de l'adresse ip valide en InetAddress
        } catch (UnknownHostException ex) {
            Logger.getLogger(ManagerIHM.class.getName()).log(Level.SEVERE, null, ex);
        }
        Communautebytes = Communaute.getBytes(); // conversion du string communaute en byte[]
        SNMPMessage msg;
        msg = new SNMPMessage(ipv4, ipv4, 161, version, Communautebytes, (byte)0xA0, payload); // constructeur (probablement faux ici)
        jTabbedPane2.setSelectedIndex(1);   // il aura des conditions avant de passer au tab SNMP
    }//GEN-LAST:event_ValiderConfigurationActionPerformed

    private void ValueFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValueFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ValueFieldActionPerformed

    private void ValueFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ValueFieldMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_ValueFieldMouseExited

    private void ValueFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ValueFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ValueFieldMouseClicked

    private void ClearFieldBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearFieldBoutonActionPerformed
        SetOIDField.setText("");    //
        ValueField.setText("");     //
        LogTextArea.setText("");    //
    }//GEN-LAST:event_ClearFieldBoutonActionPerformed

    private void SetOIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetOIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SetOIDFieldActionPerformed

    private void SetOIDFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SetOIDFieldMouseExited
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (SetOIDField.getText().isEmpty() == true) {
            SetOIDField.setText("Value to set");
        } else {
            // il y a une valeur dans le champs donc on ne fait rien
        }
    }//GEN-LAST:event_SetOIDFieldMouseExited

    private void SetOIDFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SetOIDFieldMouseClicked
        // TODO add your handling code here:
        // on sélectionne le text pour que l'utilisateur l'efface ou puisse le modifier
        SetOIDField.selectAll();
    }//GEN-LAST:event_SetOIDFieldMouseClicked
    // GET OK
    private void GetBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetBoutonActionPerformed
        // désactivation du bouton
        this.GetBouton.setEnabled(false);
        //
        ArrayList<VarBind> varBindingsList = new ArrayList<>();
        //
        varBindingsList.add(new VarBind(new OID(this.SetOIDField.getText()), null));
        //
        SNMPMessagePayload payload      = new SNMPMessagePayload(0X0F000001, 0, 0, varBindingsList);
        try{
            //
            InetAddress Receiver        = InetAddress.getByName(this.AddressIPField.getText());            //
            //
            SNMPMessage req_msg         = new SNMPMessage(null, Receiver, 161, 2, this.CommunauteField.getText().getBytes(), (byte) 0xA0, payload); 
            // envoi de la requête
            SNMPMessage res_msg         = snmpHandler.sendGetNextRequest(req_msg);
            // affichage du résultat
            this.LogTextArea.setText(res_msg.toStringforIHM());
            //
            setOidandValueOnIhmByVarBin(res_msg.getPayload().getVarBindingsList().get(0));
            
        }catch(Exception e){
            //réactiovation du bouton
            this.GetBouton.setEnabled(true);
            //
            System.err.println("[IHM_ERROR.GetBouton]: " +e.getMessage());
        } 
        
        this.GetBouton.setEnabled(true);
    }//GEN-LAST:event_GetBoutonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void AddressIPFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressIPFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressIPFieldActionPerformed
    // SET OK
    private void SetBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetBoutonActionPerformed
        // TODO add your handling code here:
        // désactivation du bouton
        this.SetBouton.setEnabled(false);
        
        ArrayList<VarBind> varBindingsList = new ArrayList<>();
        //
        varBindingsList.add(new VarBind(new OID(this.SetOIDField.getText()), this.ValueField.getText().getBytes()));
                                                              // reqID, pas d'erreur, pas d'erreurn, list varbind
        SNMPMessagePayload payload      = new SNMPMessagePayload(0X0F000001, 0, 0, varBindingsList);
        // création du message SNMP
        try{
            //
            InetAddress Receiver        = InetAddress.getByName(this.AddressIPField.getText());            //
            //
            SNMPMessage req_msg         = new SNMPMessage(null, Receiver, 161, 2, this.CommunauteField.getText().getBytes(), (byte) 0xA4, payload); 
            // envoi de la requête
            SNMPMessage res_msg         = snmpHandler.sendGetNextRequest(req_msg);
            // affichage du résultat
            this.LogTextArea.setText(res_msg.toStringforIHM());
            //
            setOidandValueOnIhmByVarBin(res_msg.getPayload().getVarBindingsList().get(0));
        }catch(Exception e){
            this.SetBouton.setEnabled(true);
            System.err.println("[IHM_ERROR.SetBouton]: " +e.getMessage());
        }
        //
        this.SetBouton.setEnabled(true);
    }//GEN-LAST:event_SetBoutonActionPerformed
    // GET NEXT OK
    private void GetNextBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetNextBoutonActionPerformed
        // TODO add your handling code here:
        // désactivation du bouton
        this.GetNextBouton.setEnabled(false);
        //        
        ArrayList<VarBind> varBindingsList = new ArrayList<>();
        //
        varBindingsList.add(new VarBind(new OID(this.SetOIDField.getText()), this.ValueField.getText().getBytes()));
                                                              // reqID, pas d'erreur, pas d'erreurn, list varbind
        SNMPMessagePayload payload      = new SNMPMessagePayload(0X0F000000, 0, 0, varBindingsList);
        // création du message SNMP
        try{
            //
            InetAddress Receiver        = InetAddress.getByName(this.AddressIPField.getText());            //
            //
            SNMPMessage req_msg         = new SNMPMessage(null, Receiver, 161, 2, this.CommunauteField.getText().getBytes(), (byte) 0xA1, payload); 
            // envoi de la requête
            SNMPMessage res_msg         = snmpHandler.sendGetNextRequest(req_msg);
            // affichage du résultat
            this.LogTextArea.setText(res_msg.toStringforIHM());
            //
            setOidandValueOnIhmByVarBin(res_msg.getPayload().getVarBindingsList().get(0));
            //
        }catch(Exception e){
            this.GetNextBouton.setEnabled(true);
            System.err.println("[IHM_ERROR.SetBouton]: " +e.getMessage());
        }
        //
        this.GetNextBouton.setEnabled(true);
    }//GEN-LAST:event_GetNextBoutonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddressIPField;
    private javax.swing.JButton ClearFieldBouton;
    private javax.swing.JTextField CommunauteField;
    private javax.swing.JPanel ConfigurationPanel;
    private javax.swing.JButton GetBouton;
    private javax.swing.JButton GetNextBouton;
    private javax.swing.JTextArea LogTextArea;
    private javax.swing.JPanel SNMPPanel;
    private javax.swing.JButton SetBouton;
    private javax.swing.JTextField SetOIDField;
    private javax.swing.JButton ValiderConfiguration;
    private javax.swing.JTextField ValueField;
    private javax.swing.JComboBox choixversionSNMP;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel label_logo_UPSSITECH;
    private javax.swing.JLabel label_logo_stri;
    private javax.swing.JLabel label_soft_name;
    private javax.swing.JPanel main_panel;
    private javax.swing.JTree network_tree;
    private javax.swing.JLabel resultatValidationIP;
    // End of variables declaration//GEN-END:variables

    private SNMPHandler snmpHandler;
}
